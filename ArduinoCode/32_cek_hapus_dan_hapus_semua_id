#include <Adafruit_Fingerprint.h>

// Gunakan Serial2 untuk koneksi dengan sensor fingerprint
HardwareSerial mySerial(2);  // UART2 (TX=17, RX=16)

// RX = ESP32 GPIO16, TX = ESP32 GPIO17
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

void setup() {
  Serial.begin(115200);
  delay(1000);
  Serial.println("FingerSnap System Ready!");

  // Setup UART2 dengan baudrate fingerprint sensor
  mySerial.begin(57600, SERIAL_8N1, 16, 17);

  // Inisialisasi sensor fingerprint
  if (finger.begin()) {
    Serial.println("Sensor fingerprint terdeteksi.");
  } else {
    Serial.println("Gagal mendeteksi sensor fingerprint!");
    while (1);
  }

  finger.getTemplateCount();
  Serial.print("Jumlah fingerprint tersimpan: ");
  Serial.println(finger.templateCount);

  printMenu();
}

void loop() {
  if (Serial.available()) {
    char cmd = Serial.read();

    switch (cmd) {
      case '1':
        listFingerprintIDs();
        break;
      case '2':
        deleteFingerprintByID();
        break;
      case '3':
        deleteAllFingerprints();
        break;
      default:
        Serial.println("Perintah tidak dikenali.");
        break;
    }

    printMenu();
  }
}

void printMenu() {
  Serial.println("\n=== Menu FingerSnap ===");
  Serial.println("1. List ID fingerprint yang terdaftar");
  Serial.println("2. Hapus fingerprint berdasarkan ID");
  Serial.println("3. Hapus semua fingerprint");
  Serial.println("Ketik angka menu lalu tekan ENTER:");
}

void listFingerprintIDs() {
  finger.getTemplateCount();
  if (finger.templateCount == 0) {
    Serial.println("Tidak ada fingerprint yang tersimpan.");
    return;
  }

  Serial.print("Fingerprint terdaftar (total ");
  Serial.print(finger.templateCount);
  Serial.println(" ID):");

  for (int i = 1; i <= 200; i++) {
    if (finger.loadModel(i) == FINGERPRINT_OK) {
      Serial.print("ID: ");
      Serial.println(i);
    }
  }
}

void deleteFingerprintByID() {
  Serial.println("Masukkan ID yang ingin dihapus:");
  while (!Serial.available());
  int id = Serial.parseInt();

  if (id <= 0 || id > 200) {
    Serial.println("ID tidak valid!");
    return;
  }

  uint8_t p = finger.deleteModel(id);
  if (p == FINGERPRINT_OK) {
    Serial.print("ID ");
    Serial.print(id);
    Serial.println(" berhasil dihapus.");
  } else {
    Serial.println("Gagal menghapus fingerprint (mungkin tidak ditemukan).");
  }
}

void deleteAllFingerprints() {
  Serial.println("Konfirmasi hapus semua? Ketik 'YA' lalu ENTER:");

  String confirm = "";
  while (confirm.length() == 0) {
    if (Serial.available()) {
      confirm = Serial.readStringUntil('\n');
      confirm.trim();
    }
  }

  if (confirm == "YA") {
    if (finger.emptyDatabase() == FINGERPRINT_OK) {
      Serial.println("Semua fingerprint berhasil dihapus.");
    } else {
      Serial.println("Gagal menghapus database fingerprint.");
    }
  } else {
    Serial.println("Aksi dibatalkan.");
  }
}
